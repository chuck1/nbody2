#version 330 core

out vec4 color;

in vec4 p0;
in vec4 p;
in vec3 n;

int sign(float x)
{
	if(x > 0) return 1;
	return 0;
}

void main()
{
	vec4 mat_diffuse;
	vec4 white = vec4(1,1,1,0);

	float a = p0.x * p0.y * p0.z;

	mat_diffuse = vec4(sign(p0.x),sign(p0.y),sign(p0.z),0);

	if((p0.x <= 0)&&(p0.y <= 0)&&(p0.z <= 0)) mat_diffuse = white;


	// directional light
	vec3 L = normalize(vec3(1,1,1));

	vec4 diffuse = mat_diffuse * max(dot(n,L), 0.0);
	
	color = diffuse;

	//color = vec4(n * 0.5 + 0.5, 0);
}

